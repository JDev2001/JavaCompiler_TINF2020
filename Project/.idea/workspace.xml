<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ffcb8091-eb45-4ad6-9380-debf4ae64294" name="Default Changelist" comment="Klassen auf Records umgestellt">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodeGenerator/src/BytecodeGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/CodeGenerator/src/BytecodeGenerator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedAccessModifiers.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedBlock.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedBlock.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedProgram.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedCommon/TypedProgram.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedBinaryExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedBinaryExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedCompareExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedCompareExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedConstExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedConstExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedJNullExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedJNullExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedSuperExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedSuperExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedThisExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedThisExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedTypeExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedTypeExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedUnaryExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedExpressions/TypedUnaryExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedField/TypedField.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedField/TypedField.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedMethod/TypedMethod.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedMethod/TypedMethod.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedMethod/TypedMethodParameter.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedMethod/TypedMethodParameter.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedAssignStatementExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedAssignStatementExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedInstVarStatementExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedInstVarStatementExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedMethodCallStatementExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedMethodCallStatementExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedNewStatementExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatementExpression/TypedNewStatementExpression.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedBaseObject.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedIfElseStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedIfElseStatement.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedReturnStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedReturnStatement.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedVarDeclarationStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedVarDeclarationStatement.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedWhileStatement.java" beforeDir="false" afterPath="$PROJECT_DIR$/SemantikCheck/src/typedStatements/TypedWhileStatement.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/ITypedMethodType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/ITypedType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/TypedBoolType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/TypedCharType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/TypedCustomType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/TypedIntType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SemantikCheck/src/typedTypes/TypedVoidType.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Tests/Tests.iml" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/Tests.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Tests/src/ParserTests/EmptyClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/src/ParserTests/EmptyClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Common/Block.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Common/Block.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Common/Class.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Common/Class.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/BinaryExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/BinaryExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/CompareExpression$ComapreOperators.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/CompareExpression$ComapreOperators.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/CompareExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/CompareExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/ConstExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/ConstExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/JNullExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/JNullExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/SuperExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/SuperExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/ThisExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/ThisExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/TypeExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/TypeExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Expressions/UnaryExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Expressions/UnaryExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Field/Field.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Field/Field.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Method/Method.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Method/Method.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Method/MethodParameter.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Method/MethodParameter.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/AssignStatementExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/AssignStatementExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/InstVarStatementExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/InstVarStatementExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/MethodCallStatementExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/MethodCallStatementExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/NewStatementExpression.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/StatementExpression/NewStatementExpression.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Statements/IfElseStatement.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Statements/IfElseStatement.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Statements/ReturnStatement.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Statements/ReturnStatement.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Statements/VarDeclarationStatement.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Statements/VarDeclarationStatement.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Statements/WhileStatement.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Statements/WhileStatement.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Types/BoolType.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Types/BoolType.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Types/CharType.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Types/CharType.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Types/CustomType.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Types/CustomType.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Types/IntType.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Types/IntType.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/DataClasses/Types/VoidType.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/DataClasses/Types/VoidType.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Project/com/company/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Project/com/company/Main.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/test/Tests/ParserTests/EmptyClass.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/test/Tests/ParserTests/EmptyClass.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="module-info" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="28vsGKvKvucAAL3geNhZ8gNIrng" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Downloaded.Files.Path.Enabled": "false",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Administrator\Desktop\JavaCompiler_TINF2020\Project\Ressources" />
      <recent name="F:\User Folder\Desktop\JavaCompiler_TINF2020\Project\src\com\company" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Jona\IdeaProjects\JavaCompiler_TINF2020\Project\Parser\src" />
      <recent name="C:\Users\Jona\IdeaProjects\JavaCompiler_TINF2020\Project\Parser" />
      <recent name="C:\Users\Administrator\Desktop\JavaCompiler_TINF2020\Project\Ressources" />
      <recent name="F:\User Folder\Desktop\JavaCompiler_TINF2020\Project" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.EmptyClass.Test">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.company.Main" />
      <module name="Project" />
      <option name="PROGRAM_PARAMETERS" value="Ressources/EmptyClass.java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.company.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmptyClass" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Tests" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ParserTests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="ParserTests" />
      <option name="MAIN_CLASS_NAME" value="ParserTests.EmptyClass" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmptyClass.Test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Tests" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ParserTests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="ParserTests" />
      <option name="MAIN_CLASS_NAME" value="ParserTests.EmptyClass" />
      <option name="METHOD_NAME" value="Test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="JUnit.EmptyClass" />
      <item itemvalue="JUnit.EmptyClass.Test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.EmptyClass.Test" />
        <item itemvalue="Application.Main" />
        <item itemvalue="JUnit.EmptyClass" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ffcb8091-eb45-4ad6-9380-debf4ae64294" name="Default Changelist" comment="" />
      <created>1652108297266</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1652108297266</updated>
    </task>
    <task id="LOCAL-00001" summary="Setup parser folder structure and main methode">
      <created>1652109126816</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1652109126816</updated>
    </task>
    <task id="LOCAL-00002" summary="Antlr Configuration">
      <created>1652112691052</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1652112691052</updated>
    </task>
    <task id="LOCAL-00003" summary="Main class + Base for the Parser/Lexer (Added Program/Class Adapter)">
      <created>1652118331666</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1652118331666</updated>
    </task>
    <task id="LOCAL-00004" summary="EmptyClass.java added">
      <created>1652259310567</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1652259310567</updated>
    </task>
    <task id="LOCAL-00005" summary="Main class edited">
      <created>1652259765716</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1652259765716</updated>
    </task>
    <task id="LOCAL-00006" summary="Klassen auf Records umgestellt">
      <created>1652276614096</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1652276614096</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Setup parser folder structure and main methode" />
    <MESSAGE value="Antlr Configuration" />
    <MESSAGE value="Base for the Parser/Lexer (Added Program/Class Adapter)" />
    <MESSAGE value="Main class + Base for the Parser/Lexer (Added Program/Class Adapter)" />
    <MESSAGE value="EmptyClass.java added" />
    <MESSAGE value="Main class edited" />
    <MESSAGE value="Klassen auf Records umgestellt" />
    <option name="LAST_COMMIT_MESSAGE" value="Klassen auf Records umgestellt" />
  </component>
</project>