<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ffcb8091-eb45-4ad6-9380-debf4ae64294" name="Default Changelist" comment="Main class edited">
      <change afterPath="$PROJECT_DIR$/Parser/src/adapter/GeneralAdapter/ClassAdapter.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Parser/src/adapter/MethodAdapter/MethodeAdapter.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ressources/EmptyClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/SyntaxTreeGenerator/SyntaxTreeGenerator.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/SyntaxTreeGenerator/SyntaxTreeGenerator.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/adapter/ClassAdapter.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/adapter/FieldAdapter/FieldAdapter.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/adapter/ProgramAdapter.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/adapter/GeneralAdapter/ProgramAdapter.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammar.interp" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammar.interp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarBaseListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarBaseListener.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarBaseVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarBaseVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarLexer.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarLexer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarListener.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarListener.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/generated/antlrGrammarVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/grammar/antlrGrammar.g4" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/grammar/antlrGrammar.g4" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Parser/src/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/Parser/src/module-info.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Tests/src/ParserTests/EmptyClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/Tests/src/ParserTests/EmptyClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/SyntaxTreeGenerator/SyntaxTreeGenerator.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/SyntaxTreeGenerator/SyntaxTreeGenerator.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/adapter/ClassAdapter.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/adapter/ProgramAdapter.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammar.interp" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammar.interp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$AssignContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$AssignContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BaseTypeContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BaseTypeContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BasicexpressionsContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BasicexpressionsContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BinaryContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BinaryContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BlockContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$BlockContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ClassBodyContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ClassBodyContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ConstructorContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ConstructorContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ExpressionContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ExpressionContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$FieldDeclarationContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$FieldDeclarationContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$IfelseContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$IfelseContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$InstVarContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$InstVarContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JClassContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JClassContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JElseContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JElseContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JElseIfContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JElseIfContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JIfContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JIfContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JNewContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JNewContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JReturnContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JReturnContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JWhileContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$JWhileContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$LocalVarDeclarationContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$LocalVarDeclarationContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodCallContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodCallContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodCallPrefixContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodCallPrefixContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodDeclarationContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodDeclarationContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodParameterContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$MethodParameterContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$NArgumentsContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$NArgumentsContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$NMethodParametersContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$NMethodParametersContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ObjectTypeContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ObjectTypeContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$OperatorsContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$OperatorsContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ProgrammContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$ProgrammContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$StatementContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$StatementContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$StatementExpressionsContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$StatementExpressionsContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$UnaryContext.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser$UnaryContext.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/generated/antlrGrammarParser.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/grammar/antlrGrammar.g4" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/grammar/antlrGrammar.g4" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Parser/module-info.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Parser/module-info.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/test/Tests/ParserTests/EmptyClass.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/test/Tests/ParserTests/EmptyClass.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="module-info" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="28vsGKvKvucAAL3geNhZ8gNIrng" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.19934641" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Administrator\Desktop\JavaCompiler_TINF2020\Project\Ressources" />
      <recent name="F:\User Folder\Desktop\JavaCompiler_TINF2020\Project\src\com\company" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Jona\IdeaProjects\JavaCompiler_TINF2020\Project\Parser\src" />
      <recent name="C:\Users\Jona\IdeaProjects\JavaCompiler_TINF2020\Project\Parser" />
      <recent name="C:\Users\Administrator\Desktop\JavaCompiler_TINF2020\Project\Ressources" />
      <recent name="F:\User Folder\Desktop\JavaCompiler_TINF2020\Project" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.EmptyClass">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.company.Main" />
      <module name="Project" />
      <option name="PROGRAM_PARAMETERS" value="Ressources/EmptyClass.java" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.company.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmptyClass" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Tests" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ParserTests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="ParserTests" />
      <option name="MAIN_CLASS_NAME" value="ParserTests.EmptyClass" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmptyClass.Test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Tests" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ParserTests.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="ParserTests" />
      <option name="MAIN_CLASS_NAME" value="ParserTests.EmptyClass" />
      <option name="METHOD_NAME" value="Test" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.EmptyClass" />
        <item itemvalue="Application.Main" />
        <item itemvalue="JUnit.EmptyClass.Test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ffcb8091-eb45-4ad6-9380-debf4ae64294" name="Default Changelist" comment="" />
      <created>1652108297266</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1652108297266</updated>
    </task>
    <task id="LOCAL-00001" summary="Setup parser folder structure and main methode">
      <created>1652109126816</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1652109126816</updated>
    </task>
    <task id="LOCAL-00002" summary="Antlr Configuration">
      <created>1652112691052</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1652112691052</updated>
    </task>
    <task id="LOCAL-00003" summary="Main class + Base for the Parser/Lexer (Added Program/Class Adapter)">
      <created>1652118331666</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1652118331666</updated>
    </task>
    <task id="LOCAL-00004" summary="EmptyClass.java added">
      <created>1652259310567</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1652259310567</updated>
    </task>
    <task id="LOCAL-00005" summary="Main class edited">
      <created>1652259765716</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1652259765716</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Setup parser folder structure and main methode" />
    <MESSAGE value="Antlr Configuration" />
    <MESSAGE value="Base for the Parser/Lexer (Added Program/Class Adapter)" />
    <MESSAGE value="Main class + Base for the Parser/Lexer (Added Program/Class Adapter)" />
    <MESSAGE value="EmptyClass.java added" />
    <MESSAGE value="Main class edited" />
    <option name="LAST_COMMIT_MESSAGE" value="Main class edited" />
  </component>
</project>